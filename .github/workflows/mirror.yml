name: Mirror & Pages

on:
  schedule:
    # 每30分钟同步一次（需要公开仓库或开启 Actions）
    - cron: "*/30 * * * *"
  workflow_dispatch: {}
  push:
    paths:
      - ".github/workflows/mirror.yml"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Prepare public dir
        run: |
          set -e
          rm -rf public && mkdir -p public
          # 健康检查文件
          echo '{ "status": "ok", "ts": "'$(date -u +%FT%TZ)'" }' > public/healthz.json

      # === 示例：从公开源镜像规则文件（请按需增减/替换）===
      - name: Mirror upstream rules
        run: |
          set -euo pipefail
          # 这里示例使用公开项目 blackmatrix7/ios_rule_script 的原始文件
          # 你可以把下面的 URL 替换成你真正需要的 RAW 文件链接
          curl -fsSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Advertising/Advertising.list -o public/Advertising.list
          curl -fsSL https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Global/Global.list -o public/Global.list

          # 首页（可选）
          cat > public/index.html <<'HTML'
          <!doctype html>
          <meta charset="utf-8">
          <title>rules-mirror</title>
          <h1>rules-mirror</h1>
          <ul>
            <li><a href="Advertising.list">Advertising.list</a></li>
            <li><a href="Global.list">Global.list</a></li>
            <li><a href="healthz.json">healthz.json</a></li>
          </ul>
          <p>更新时间：<span id="ts"></span></p>
          <script>
            fetch('healthz.json').then(r=>r.json()).then(j=>{
              document.getElementById('ts').textContent = j.ts;
            });
          </script>
          HTML

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
